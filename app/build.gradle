apply plugin: 'com.android.application'
apply plugin: 'newlens'
//apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion project.projectCompileSdkVersion as int
    buildToolsVersion  project.projectBuildToolsVersion
    useLibrary 'org.apache.http.legacy'
    packagingOptions {
        // More than one file was found with OS independent path 加上这写代码
        pickFirst 'META-INF/*'
    }
    defaultConfig {
        applicationId "net.oschina.app"
        minSdkVersion 15
        targetSdkVersion project.projectTargetSdkVersion as int
        versionCode 48
        versionName "2.51"
    }

    signingConfigs {
        release {
        }
    }

    // 移除lint检查的error
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar','*.aar'], dir: 'libs')
    // implementation project(':social_sdk_library_project')
    implementation 'com.android.support:appcompat-v7:'.concat(project.projectSupportVersion)
    implementation 'com.github.chrisbanes.photoview:library:1.2.4'
    implementation 'com.android.support:support-v4:'.concat(project.projectSupportVersion)
    implementation 'com.loopj.android:android-async-http:1.4.9'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.networkbench.newlens.agent.android:nbs.newlens.agent:2.8.2'
    implementation 'com.google.zxing:core:3.3.2'
}

// 配置签名文件以及相关的账号信息
File propFile = new File('sign.properties')
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}
